name: channel_admin
env:
  DOCKER_USER: "deskent"
  DOCKER_REPOSITORY_NAME: "deskent"
  PROJECT_NAME: "channel_admin"
  STAGE: "dev"
  VERSION: "ver-${{ github.sha }}"
  COUNT: "1.0"
on:
  push:
    branches: [ aaa ]
jobs:
  create_docker_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: |
          echo "${{ secrets.DOCKER_ACCESS_TOKEN }}" | docker login -u $DOCKER_USER --password-stdin
      - name: Docker build
        run: |
          docker build . -t ${{ env.PROJECT_NAME }}:${{ env.VERSION }}
      - name: Docker tagging
        run: |
          docker tag ${{ env.PROJECT_NAME }}:${{ env.VERSION}} ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }}
      - name: Docker push
        run: |
          docker push ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }}
#  deploy:
#    runs-on: ubuntu-latest
#    needs: [create_docker_build]
#    env:
#      WORK_DIR: "/home/${{ secrets.USERNAME }}/deploy"
#    steps:
#      - name: Git clone
#        uses: actions/checkout@v2
#      - name: Executing remote ssh commands using ssh key
#        uses: appleboy/ssh-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USERNAME }}
#          key: ${{ secrets.SSH_KEY }}
#          script: |
#            cd ${{ env.WORK_DIR }}
#            docker-compose stop ${{ env.PROJECT_NAME }}
#            docker container rm ${{ env.PROJECT_NAME }}
#            docker rmi ${{ env.DOCKER_USER }}/${{ env.DOCKER_REPOSITORY_NAME }}:${{ env.PROJECT_NAME}}-${{ env.COUNT }} -f
#            docker-compose up --force-recreate -d --build ${{ env.PROJECT_NAME }}
